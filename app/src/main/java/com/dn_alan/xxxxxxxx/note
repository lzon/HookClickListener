理解：
主要为了实现应用各部分解耦用的。使应用开发更加可扩展，更容易维护！
如果以对象需要另外的一个对象才能完成一个完整功能的话，那么这里就存在一个依赖：
假如：人盛饭需要铲子，你可以在人这个对象里面直接直接初使化铲子，也可以用一个工厂生产铲子。
      使用依赖注入无需一个专门的类来初使化这些依赖对象，这样就实现的解耦。




我们来重新理一遍上面的注入过程，首先弄清楚以下几个概念：
1.@Inject 带有此注解的属性或构造方法将参与到依赖注入中，Dagger2会实例化有此注解的类
2.@Module 带有此注解的类，用来提供依赖，里面定义一些用@Provides注解的以provide开头的方法，
  这些方法就是所提供的依赖，Dagger2会在该类中寻找实例化某个类所需要的依赖。
3.@Component 用来将@Inject和@Module联系起来的桥梁，从@Module中获取依赖并将依赖注入给@Inject.

